# Supported and current values of the ini file:
[global]
# The directory where the IO500 runs
datadir = /ai400/datafiles
# The data directory is suffixed by a timestamp. Useful for running several IO500 tests concurrently.
timestamp-datadir = TRUE
# The result directory.
resultdir = ./results
# The result directory is suffixed by a timestamp. Useful for running several IO500 tests concurrently.
timestamp-resultdir = TRUE
# The API to create/delete the datadir
api = POSIX
# Purge the caches, this is useful for testing and needed for single node runs
drop-caches = FALSE
# Cache purging command, invoked before each I/O phase
drop-caches-cmd = sudo -n bash -c "echo 3 > /proc/sys/vm/drop_caches"
# The verbosity level between 1 and 10
#verbosity = 1

[debug]
# Stonewall timer must be 300 for a valid result, can be smaller for testing
stonewall-time = 300

[ior-easy]
# The API to be used
API = POSIX
# Use ODirect
posix.odirect = True
# Transfer size
transferSize = 16m
# Block size; must be a multiple of transferSize
blockSize = 78000m
# Filename for MPI hint file
hintsFileName = 
# Create one file per process
filePerProc = TRUE
# Use unique directory per file per process
uniqueDir = FALSE
# Disable running of this phase
noRun = 
# The verbosity level
#verbosity = 2

[ior-easy-write]
# The API to be used
API = 
# Use ODirect
posix.odirect = True
# Filename for hints file
hintsFileName = 

[mdtest-easy]
# The API to be used
API = POSIX
# Use ODirect
posix.odirect = FALSE 
# Files per proc
n = 350000
# Disable running of this phase
noRun = 

[mdtest-easy-write]
# The API to be used
API = 
# Use ODirect
posix.odirect = FALSE
# Disable running of this phase
noRun = 

[timestamp]

[ior-hard]
# The API to be used
API = POSIX
# Use ODirect
posix.odirect = FALSE
# Filename for hints file
hintsFileName = 
# Number of segments
segmentCount = 150000
# Disable running of this phase
noRun = 
# The verbosity level
#verbosity = 1

[ior-hard-write]
# The API to be used
API = 
# Use ODirect
posix.odirect = FALSE 
# Filename for hints file
hintsFileName = 

[mdtest-hard]
# The API to be used
API = POSIX
# Use ODirect
posix.odirect = FALSE 
# Files per proc
n = 190000
# Disable running of this phase
noRun = 

[mdtest-hard-write]
# The API to be used
API = 
# Use ODirect
posix.odirect = FALSE 
# Disable running of this phase
noRun = 

[find]
# Set to an external script to perform the find phase
external-script = 
# Extra arguments for external scripts
external-extra-args = 
# Startup arguments for external scripts
external-mpi-args = 
# Set the number of processes for pfind
nproc = 
# Pfind queue length
pfind-queue-length = 10000
# Pfind Steal from next
pfind-steal-next = FALSE
# Parallelize the readdir by using hashing. Your system must support this!
pfind-parallelize-single-dir-access-using-hashing = FALSE

[ior-easy-read]
# The API to be used
API = 
# Use ODirect
posix.odirect = True
# Filename for hints file
hintsFileName = 

[mdtest-easy-stat]
# The API to be used
API = 
# Use ODirect
posix.odirect = FALSE
# Disable running of this phase
noRun = 

[ior-hard-read]
# The API to be used
API = 
# Use ODirect
posix.odirect = FALSE
# Filename for hints file
hintsFileName = 

[mdtest-hard-stat]
# The API to be used
API = 
# Use ODirect
posix.odirect = FALSE
# Disable running of this phase
noRun = 

[mdtest-easy-delete]
# The API to be used
API = 
# Use ODirect
posix.odirect = FALSE
# Disable running of this phase
noRun = 

[mdtest-hard-read]
# The API to be used
API = 
# Use ODirect
posix.odirect = FALSE
# Disable running of this phase
noRun = 

[mdtest-hard-delete]
# The API to be used
API = 
# Use ODirect
posix.odirect = FALSE 
# Disable running of this phase
noRun = 

