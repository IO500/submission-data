[global]
# The directory where the IO500 runs
datadir = ./datadir
# The data directory is suffixed by a timestamp. Useful for running several IO500 tests concurrently.
timestamp-datadir = TRUE
# The result directory.
resultdir = ./results
# The result directory is suffixed by a timestamp. Useful for running several IO500 tests concurrently.
timestamp-resultdir = TRUE
# The API to create/delete the datadir
api = POSIX
# Purge the caches, this is useful for testing and needed for single node runs
drop-caches = FALSE
# Cache purging command, invoked before each I/O phase
drop-caches-cmd = sudo -n bash -c "echo 3 > /proc/sys/vm/drop_caches"
# The verbosity level between 1 and 10
verbosity = 1
# DataPacketType
dataPacketType = incompressible

[debug]
# The stonewall timer, set to a smaller value for testing
stonewall-time = 300

[ior-easy]
# Transfer size
transferSize = 1m
# Create one file per process
filePerProc = TRUE
# Block size; must be a multiple of transferSize, changing for sanity test
# for large runs
blockSize = 5120m
# for small runs
#blocksize = 38400m
# API and extra options
api=POSIX --posix.odirect


[ior-easy-write]

[ior-rnd4K]

[ior-rnd4K-write]
api=POSIX --posix.odirect

[mdtest-easy]
# Files per proc, decreasing for sanity test
# for large runs
n = 5000 
# for small runs
#n = 30000 


[mdtest-easy-write]

[ior-rnd1MB]

[ior-rnd1MB-write]
api=POSIX --posix.odirect

[mdworkbench]

[mdworkbench-create]

[timestamp]

[find-easy]
# Pfind Steal from next
pfind-steal-next = TRUE
# Pfind queue length
pfind-queue-length = 20000
# Pfind with hashing
#pfind-parallelize-single-dir-access-using-hashing = TRUE

[ior-hard]

[ior-hard-write]
api=POSIX --posix.odirect

[mdtest-hard]

[mdtest-hard-write]

[find]
# Pfind Steal from next
pfind-steal-next = TRUE
# Pfind queue length
pfind-queue-length = 20000
# Pfind with hashing
#pfind-parallelize-single-dir-access-using-hashing = TRUE
# Set the number of processes for pfind
#nproc = 800

[ior-rnd4K-read]

[ior-rnd1MB-read]

[find-hard]
# Pfind Steal from next
pfind-steal-next = TRUE
# Pfind queue length
pfind-queue-length = 20000
# Pfind with hashing
#pfind-parallelize-single-dir-access-using-hashing = TRUE

[mdworkbench-bench]

[ior-easy-read]

[mdtest-easy-stat]

[ior-hard-read]

[mdtest-hard-stat]

[mdworkbench-delete]

[mdtest-easy-delete]

[mdtest-hard-read]

[mdtest-hard-delete]

